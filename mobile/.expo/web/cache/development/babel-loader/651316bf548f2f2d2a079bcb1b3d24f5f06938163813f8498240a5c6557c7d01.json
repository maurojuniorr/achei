{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewPostScreen = function NewPostScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemName = _useState2[0],\n    setItemName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    itemLocation = _useState4[0],\n    setItemLocation = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    itemCategory = _useState6[0],\n    setItemCategory = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedImage = _useState8[0],\n    setSelectedImage = _useState8[1];\n  var handleSelectImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (!permissionResult.granted) {\n          alert('A permissão para acessar a galeria é necessária.');\n          return;\n        }\n        var pickerResult = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [1, 1],\n          quality: 1\n        });\n        if (!pickerResult.cancelled) {\n          setSelectedImage(pickerResult);\n        }\n      } catch (error) {\n        console.log('Erro ao selecionar imagem: ', error);\n      }\n    });\n    return function handleSelectImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleSubmit = function handleSubmit() {\n    var formData = new FormData();\n    formData.append('itemName', itemName);\n    formData.append('itemLocation', itemLocation);\n    formData.append('itemCategory', itemCategory);\n    formData.append('itemImage', {\n      uri: selectedImage.uri,\n      name: 'item.jpg',\n      type: 'image/jpeg'\n    });\n    fetch('URL_DA_SUA_API', {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n    }).catch(function (error) {\n      console.error('Erro ao enviar dados para a API: ', error);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.selectImageButton,\n      onPress: handleSelectImage,\n      children: [_jsx(Icon, {\n        name: \"camera-outline\",\n        size: 30,\n        color: \"#22c55e\"\n      }), _jsx(Text, {\n        style: styles.selectImageText,\n        children: \"Selecionar Imagem\"\n      })]\n    }), selectedImage && _jsx(Image, {\n      source: {\n        uri: selectedImage.uri\n      },\n      style: styles.selectedImage\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome do Item\",\n      placeholderTextColor: \"#8a8a8f\",\n      value: itemName,\n      onChangeText: setItemName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Local onde foi encontrado\",\n      placeholderTextColor: \"#8a8a8f\",\n      value: itemLocation,\n      onChangeText: setItemLocation\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Categoria\",\n      placeholderTextColor: \"#8a8a8f\",\n      value: itemCategory,\n      onChangeText: setItemCategory\n    }), _jsxs(TouchableOpacity, {\n      style: styles.createPostButton,\n      onPress: handleSubmit,\n      children: [_jsx(MaterialIcons, {\n        name: \"post-add\",\n        size: 25,\n        color: \"#fff\"\n      }), _jsx(Text, {\n        style: styles.createPostButtonText,\n        children: \"Criar Post\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f4f4f5',\n    padding: 20\n  },\n  selectImageButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  selectImageText: {\n    fontSize: 18,\n    color: '#22c55e',\n    marginLeft: 10\n  },\n  selectedImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 10,\n    marginBottom: 20\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    fontSize: 16,\n    color: '#27272a',\n    marginBottom: 15\n  },\n  createPostButton: {\n    backgroundColor: '#22c55e',\n    width: '100%',\n    height: 50,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 30,\n    flexDirection: 'row'\n  },\n  createPostButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginLeft: 10\n  }\n});\nexport default NewPostScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Image","StyleSheet","ImagePicker","Icon","MaterialIcons","jsx","_jsx","jsxs","_jsxs","NewPostScreen","_useState","_useState2","_slicedToArray","itemName","setItemName","_useState3","_useState4","itemLocation","setItemLocation","_useState5","_useState6","itemCategory","setItemCategory","_useState7","_useState8","selectedImage","setSelectedImage","handleSelectImage","_ref","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","cancelled","error","console","log","apply","arguments","handleSubmit","formData","FormData","append","uri","name","type","fetch","method","body","headers","then","response","json","data","catch","style","styles","container","children","selectImageButton","onPress","size","color","selectImageText","source","input","placeholder","placeholderTextColor","value","onChangeText","createPostButton","createPostButtonText","create","flex","backgroundColor","padding","flexDirection","alignItems","marginBottom","fontSize","marginLeft","width","height","borderRadius","paddingHorizontal","justifyContent","marginTop","fontWeight"],"sources":["/home/maurojunior/Documentos/achei/mobile/src/novo post/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Image, StyleSheet } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\n\r\nconst NewPostScreen = () => {\r\n  const [itemName, setItemName] = useState('');\r\n  const [itemLocation, setItemLocation] = useState('');\r\n  const [itemCategory, setItemCategory] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const handleSelectImage = async () => {\r\n    try {\r\n      const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      if (!permissionResult.granted) {\r\n        alert('A permissão para acessar a galeria é necessária.');\r\n        return;\r\n      }\r\n\r\n      const pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [1, 1], // Define a proporção da imagem (1:1 neste caso)\r\n        quality: 1, // Qualidade da imagem (0 a 1)\r\n      });\r\n\r\n      if (!pickerResult.cancelled) {\r\n        setSelectedImage(pickerResult);\r\n      }\r\n    } catch (error) {\r\n      console.log('Erro ao selecionar imagem: ', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Implemente a lógica para enviar os dados do novo post para a API\r\n    // Utilize os estados itemName, itemLocation, itemCategory e selectedImage\r\n    // para enviar as informações corretas para a API\r\n    // Substitua as partes comentadas com // pelas informações reais\r\n\r\n    const formData = new FormData();\r\n    formData.append('itemName', itemName);\r\n    formData.append('itemLocation', itemLocation);\r\n    formData.append('itemCategory', itemCategory);\r\n    formData.append('itemImage', {\r\n      uri: selectedImage.uri,\r\n      name: 'item.jpg', // Substitua 'item.jpg' pelo nome do arquivo desejado\r\n      type: 'image/jpeg', // Altere para o tipo de arquivo correto (jpeg, png, etc.)\r\n    });\r\n\r\n    // Enviar formData para a API usando fetch ou Axios\r\n    // Exemplo usando fetch:\r\n    fetch('URL_DA_SUA_API', {\r\n      method: 'POST',\r\n      body: formData,\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        // Adicione outras headers necessárias para a autenticação na API\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Aqui você pode lidar com a resposta da API\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao enviar dados para a API: ', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={styles.selectImageButton} onPress={handleSelectImage}>\r\n        <Icon name=\"camera-outline\" size={30} color=\"#22c55e\" />\r\n        <Text style={styles.selectImageText}>Selecionar Imagem</Text>\r\n      </TouchableOpacity>\r\n\r\n      {selectedImage && (\r\n        <Image source={{ uri: selectedImage.uri }} style={styles.selectedImage} />\r\n      )}\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nome do Item\"\r\n        placeholderTextColor=\"#8a8a8f\"\r\n        value={itemName}\r\n        onChangeText={setItemName}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Local onde foi encontrado\"\r\n        placeholderTextColor=\"#8a8a8f\"\r\n        value={itemLocation}\r\n        onChangeText={setItemLocation}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Categoria\"\r\n        placeholderTextColor=\"#8a8a8f\"\r\n        value={itemCategory}\r\n        onChangeText={setItemCategory}\r\n      />\r\n\r\n      {/* Adicione outros campos de acordo com as informações que você deseja cadastrar */}\r\n\r\n      <TouchableOpacity style={styles.createPostButton} onPress={handleSubmit}>\r\n        <MaterialIcons name=\"post-add\" size={25} color=\"#fff\" />\r\n        <Text style={styles.createPostButtonText}>Criar Post</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f4f4f5',\r\n    padding: 20,\r\n  },\r\n  selectImageButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  selectImageText: {\r\n    fontSize: 18,\r\n    color: '#22c55e',\r\n    marginLeft: 10,\r\n  },\r\n  selectedImage: {\r\n    width: '100%',\r\n    height: 200,\r\n    borderRadius: 10,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    color: '#27272a',\r\n    marginBottom: 15,\r\n  },\r\n  createPostButton: {\r\n    backgroundColor: '#22c55e',\r\n    width: '100%',\r\n    height: 50,\r\n    borderRadius: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 30,\r\n    flexDirection: 'row',\r\n  },\r\n  createPostButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nexport default NewPostScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}